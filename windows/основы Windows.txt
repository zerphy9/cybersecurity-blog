корневой каталог Windows (обычно диск C:):
	Perflogs: может хранить логи производительности Windows. по умолчанию пуст
	Program Files: устанавливаются программы, соответствующие разрядности системы
	Program Files (x86): устанавливаются 32-битные программы, при 64-битной системе
	ProgramData: скрытая папка, содержащая данные для запуска установленных программ. эти данные доступны программе независимо от того кто ее запускает
	Users: содержит профили каждого пользователя. содержит также 2 папки
		Public: предназначена для пользователей компьютеров для обмена данными по общей сети. требуется действующая сетевая учетная запись
		Default: шаблон профиля пользователя при создании нового профиля
		user\AppData: содержит 3 подпапки
			Roaming: содержит пользовательские данные для программ (профили от браузера, настройки)
			Local: для хранения локальных данных (кэш от браузера и программ)
			Locallow: для хранения локальных данных с низким уровнем доверия (Flash-apps, Unity-игры)
	Windows: хранятся большинство файлов для работы ОС
	System, System32, SysWOW64: содержит все DLL файлы, необходимые для Windows и Windows API
		содержит логи системы
	WinSxS: хранит копии всех компонентов и пакетов обновлений Windows

терминалы Windows:
	CMD - стандартный терминал с минимальными возможностями
	базовые команды для терминала Windows:
		cls - очистить экран
		exit - закрыть терминал
		help - список доступных команд
			help <command_name> - для получения дополнительной информации о команде
			<command> /? - для получения собственного справочного меню (при наличии)

	PowerShell - имеет больше возможностей, будущее windows-администрирования. можно использовать и в Linux и в macOS
	командлеты powershell:
		представляют собой однофункциональные инструменты. 
		имеют вид Verb-Noun, которые в свою очередь имеют псевдонимы (прим. Get-ChildItem -> ls)
			Get-Alias: команда для просмотра всех доступных псевдонимов
			можно создавать свои псевдонимы для команд: 
				New-Alias -name <"new_name"> <command>
	скрипты powershell:
		powershell-ise позволяет писать скрипты, позволяя автоматизировать процесс. 
		файл скрипта имеет разрешение .ps1
		синтаксис: .\PowerView.ps1; Get-LocalGroup
			.\PowerView.ps1 - запуск скрипта (загрузка функций)
			Get-LocalGroup - использование одной из функций
		команды:
			.\script.ps1 - для запуска скрипта. все функции перестают работать при закрытии скрипта
			Import-Module .\script.ps1 - для импортирования функций скрипта. будут доступны до завершении сессии
				позволяет использовать функции скрипта как обычные функции
		защита системы Execution Policy:
			это защита от вредоносного кода, клеймо ставится на пользователя
			основные политики:
				restricted - запрет запуска любых скриптов (по умолчанию)
				remotesigned - разрешает запускать локальные скрипты, но требует подпись у скачанных
				unrestricted - позволяет все, но предупреждает
				bypass - вообще ничего не блокирует
			команды:
				Get-ExecutionPolicy -list: получить текущие настройки
				Set-ExecutionPolicy <mode> -Scope Process: установить режим bypass
				Get-Module: для отображения загруженных модулей

консоль Bash на Windows:
	WSL (Windows Subsystem for Linux) - функция, позволяющая запускать двоичные файлы Linux, а также запускать терминал Bash
	установка: Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux
	поддерживает все команды Bash

диспетчер задач Windows (taskmgr):
	предоставляет информацию о: 
		запущенных процессах, производительности системы, 
		запущенных службах, автозагрузке программ,
		вошедших в систему пользователях

службы Windows:
	отвечают за многие функции ОС: сетевые функции, диагностика системы, управление учетными данными, контроль обновлений
	существуют 3 типа служб: локальные, системные, сетевые
	список критически важных служб:
		smss.exe - отвечает за обработку сеансов в системе
		csrss.exe - процесс клиент-серверного приложения
		wininit.exe - содержит все изменения, которые необходимо внести при перезагрузке компьютера после установки программы
		logonui.exe - используется для упрощения входа пользователя
		lsass.exe - проверяет подлинность учетных записей на пк/сервере
			предоставляет собой очень важную цель для взлома, поскольку содержит в себе обычные и хешированные учетные данные 
		services.exe - управляет запуском/остановкой служб
		winlogon.exe - отвечает за загрузку профиля пользователя / блокировку системы во время застоя
		System - фоновый процесс для работы ядра Windows
		svchost.exe - управляет системными службами, которые запускаются из динамически подключаемых библиотек
	services.msc - диспетчер управления службами SCM (Service Control Manager)
		представляет собой графический интерфейс для взаимодействия со службами
		включает в себя: название службы, описание, статус, тип запуска и имя пользователя
	sc.exe - утилита для служб, позволяющая: создать, удалить, запустить, остановить, настроить и проверить службу
		работает локально и удаленно
		синтаксис: sc <имя хоста или ip*> <команда> <имя_сервиса> <параметры>
		доступные команды:
			query: показывает статус службы
			start: запускает службу
			stop: останавливает службу
			pause / continue: приостанавливает / продолжает службу
			create <name> binPath= <address>: создает новую службу
				после "=" пробел важен
			delete: удаляет службу
			config: меняет параметры службы
			qc <service_name>: для получения конфигурации службы
			sdshow <service_name>: проверить разрешения для службы с получением DACL
	Get-Acl <fileway>- команда для проверки разрешений службы
	Get-Service - команда для получения всех служб в системе
		ключи:
			-Name <name> - найти по имени
			| Sort-Object DisplayName - отсортировать по имени
			| Where-Object {$_.DisplayName -like <name>} - найти по части имени
			| Where-Object {$_.Status -eq "Running"} - найти только запущенные службы
