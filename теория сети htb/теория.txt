сеть позволяет двум компьютерам взаимодействовать друг с другом
разновидности сетей:
	topologies (сетчатых/древовидных/звездных), 
	mediums (Ethernet/оптоволоконных/коаксиальных/беспроводных)
	protocols (TCP/UDP/IPX)
суть использования разных сетей в одной плоскости заключается в том, что злоумышленнику тяжелее будет разобраться
	пример с домом: плоскость из одной сети - как дом посреди поля, окованный ключом

типы адресов сайта:
	FQDN (Fully Qualified Domain Name) - содержит только домен сайта 				www.hackthebox.eu
	URL (Uniform Resource Locator) - содержит домен а также указывает на его подразделы 	https://www.hackthebox.eu/example?floor=2&office=dev&employee=17

типы сетей:
	Wide Area Network (WAN) - большое количество локальных сетей (офис). считается интернетом, но не имеет связи с ним
	Local Area Network (LAN) - 	локальная проводная сеть, для локального использования
	Wireless Local Area Network (WLAN) - локальная беспроводная сеть, для локального использования
	Virtual Private Network (VPN) - зашифрованное подключение к другой сети, без передачи данных в интернет. три типа:
		межсайтовый VPN - позволяет соединить две или более удаленных сетей, будто находятся в одной общей сети (передача файлов без интернета)
		удаленный доступ VPN - позволяет одному пользователю подключиться к удаленной сети с помощью ПО
		SSL VPN - позволяет пользователю подключиться к сети через браузер
	PAN / WPAN (Wireless Personal Area Network) - используется для создания небольшой сети, для связки нескольких устройств по Bluetooth
	связки сетей:
		Global Area Network (GAN) - известен как интернет. но интернет не единственный, кто является сетью такого рода - имеются компании, кто использует связку нескольких WAN
		Metropolitan Area Network (MAN) - связка нескольких LAN, находящиеся в близости друг от друга. скорость передачи данных больше, чем по сети Интернет

сетевая топология означает то, как подключены устройства:
	физически - кабели / беспроводное соединение
	логически - по кругу / звезде / шине 

типы логической топологии:
	1. от точки к точке (point to point) - прямое соединение между двумя устройствами
	2. шина (bus) - все устройства подключены к одному кабелю (один длинный коридор). каждое устройство проверяет, предназначены ли ему эти данные
	3. звезда (star) - все устройства подключены к центральному узлу - высокая надежность
	4. кольцо (king) - устройства соединены в замкнутую цепь. данные передаются от устройства к устройству, пока не достигнет получателя
	5. дерево (tree) - сочетает элементы звезда и шина
	6. мэш (mesh) - каждое устройство подключено ко всем остальным
	7. гибридная топология (hybrid) - комбинация разных топологий (например, "звезда" + "дерево" или "кольцо" + "шина")

основные компоненты сети:
	основные устройства:
		клиенты - те, кто запрашивает данные
		серверы - предоставляющие данные	
	устройства для сетей:
		коммутаторы (switches) - просто соединяют устройства в сети
		маршрутизаторы (routers) - направляют данные между разными сетями
		мосты (bridges) - соединяют две части сети
		шлюзы (gateways) - переводят данные между разными типами сетей
		брандмауэры (firewalls) - защищают сеть от несанкционированного доступа
	типы соединений:
		проводные - коаксиальный кабель / оптоволоконный кабель / кабели с витой парой (Ethernet)
		беспроводные - wi-fi / сотовые сети / спутниковая связь
	узлы сети - точки подключения к сети:
		компьютеры / маршрутизаторы / принтеры / ...
		каждый из устройств имеет свой ip / mac адрес, который позволяет ему взаимодействовать с другими устройствами

прокси:
	устройство или сервис, который служит как посредник между клиентом и сервером
		обращение к серверу проходит не напрямую, а через прокси-сервер, который затем взаимодействует с целевым сервером
	ключевая особенность в том что данные, получаемые от целевого сервера, могут быть проверены, изменены или отфильтрованы
		если такового нет, то это не прокси, а шлюз (gateaway)
	типы прокси:
		1. прямой прокси (forward proxy) - используется для выхода в интернет от имени клиента. от клиента к прокси - от прокси к серверу
			скрывает настоящий ip-адрес, сменяет его на адрес прокси
		2. обратный прокси (reverse proxy) - защищает сервер от прямых запросов клиентов. клиент думает что связывается напрямую с сервером, но все запросы обрабатываются прокси
		3. прозрачный прокси (transparent proxy) - не скрывает своего существования. невозможность контролирования работы. 
			используется для мониторинга и фильтрации трафика. может использоваться в целях рекламы

VPN (Virtual Private Network):
	это технология, которая создаёт защищённое соединение между устройством пользователя и частной сетью через интернет
	преимущества:
		Конфиденциальность: Шифрование трафика предотвращает перехват данных.
		Удалённый доступ: Возможность подключения к корпоративным сетям из любой точки мира.
		Обход ограничений: Изменение IP-адреса для доступа к заблокированным сервисам.
		Стоимость: Использование общедоступного интернета вместо дорогих выделенных линий.
	принцип работы и компоненты:
		VPN создает зашифрованный туннель между устройством клиентом и сервером VPN. этот туннель защищает данные от перехвата и модификации
		1. VPN-клиент - программа, установленная на устройстве пользователя. отвечает за поддержание соединения с сервером VPN
		2. VPN-сервер - устройство или сервер, который принимает подключения от клиентов. маршрутизирует трафик между клиентами и частной сетью
		3. шифрование - используются алгоритмы, такие как AES (Advanced Encryption Standard), для защиты данных
		4. аутентификация - клиент и сервер проверяют подлинность друг друга (пароль / сертификат / общий ключ)
	протоколы VPN:
		1. IPsec (Internet Protocol Security) - протокол для шифрования и аутентификации IP-пакетов
			протоколы внутри:
				AH (Authentication Header): Обеспечивает целостность и аутентичность пакетов, но не шифрует данные
				ESP (Encapsulating Security Payload): Шифрует данные и опционально добавляет аутентификацию
			режимы работы:
				Transport Mode - шифрует только полезную нагрузку (данные), не скрывая IP-адрес. используется между двумя хостами
				Tunnel Mode - шифрует данные и IP-адрес. используется для туннелей между сетями
			порты и протоколы:
				IKE (Internet Key Exchange): UDP/500 (для согласования ключей).
				ESP: UDP/4500 (для передачи зашифрованных данных).
		2. PPTP (Point-to-Point Tunneling Protocol) - старый протокол, который создает туннель между клиентом и сервером
			недостатки:
				имеет слабое шифрование (DES)
				уязвим к атакам, таким как перехват трафика
		3. L2TP/IPsec (Layer 2 Tunneling Protocol with IPsec) - комбинация L2TP (для создания туннеля) и IPsec (для шифрования)
			преимущества - поддерживает современнные алгоритмы шифрования
		4. OpenVPN - открытый протокол, использующий SSL/TLS для шифрования
			преимущества:
				высокая безопасность
				гибкость настройки
				хорошая совместимость с файрволами
		5. IKEv2/IPsec - современный протокол на основе IPsec
			преимущества:
				быстрое восстановление соединения при смене сети (прим. Wi-Fi -> сотовая сеть)
				высокая производительность

сетевые модели:
	это правила, которые обьясняют как данные  "упаковываются", "отправляются" и "распаковываются"
	есть две основные модели:
	1. OSI — подробная модель из 7 уровней. каждый уровень делает свою работу. необходим для совместимости разных устройств и технологий
	все делается поочередно, каждый за каждым. цикл проходит дважды: при отправке (1-7) и при получении (7-1)
		прикладной - взаимодействие напрямую: отправка сообщения в мессенджере
		представительский - преобразование данных в удобный формат: сообщение шифруется
		сеансовый - управление "разговором" между устройствами: начинается разговор с сервером
		транспортный - проверяется, что все данные дошли правильно, если что то потерялось - запрашивает повторную отправку: данные делятся на части и проверяются
		сетевой - определяет маршрут, по которому данные будут передаваться: добавляется адрес получателя
		канальный - данные передаются по локальной сети
		физический - самый нижний уровень, данные превращаются в электрические сигналы, радиоволны, световые импульсы
	2. TCP/IP — упрощённая модель из 4 уровней. обьединяет некоторые уровни OSI
	ключевые задачи: логическое адресование (IP), маршрутизация (IP), контроль ошибок (TCP), поддержка приложений (TCP/UDP) и разрешение имён (DNS)
		прикладной - взаимодействие напрямую (как в OSI)
		транспортный - проверка на то, что данные дошли правильно. используются два протокола: TCP - надежный, UDP - быстрый но менее надежный
		интернет - определяет маршрут для данных. используется протокол IP - добавляет адреса отправителя и получателя
		канальный - данные передаются по локальной сети
	PDU - protocol data unit - названия данных на каждом уровне:
		на прикладном - данные: текст или файл				запрашивание веб-страницы
		на транспортном - сегмент (TCP) или дейтаграмма (UDP)		данные делятся на части (сегменты) и добавляется заголовок с номерами портов
		на сетевом - пакет								добавляется ip-адрес отправителя и получателя
		на канальном - кадр								добавляется mac-адрес устройства
		на физическом - биты								данные превращаются в биты 	и передаются по сети

сетевой уровень моделя OSI:
	сетевой уровень - то, что решает каким путем будут доставлены пакеты данных
	основные функции:
		логическое адресование - определяет, куда нужно доставить данные по IP-адресу
		маршрутизация - процесс выбора пути для данных
		передача данных между сетями - если отправитель и получатель находятся в разных сетях, данные передаются через промежуточные узлы (маршрутизаторы)
	протоколы сетевого уровня:
		протоколы обеспечивают передачу данных
		1. IPv4 / IPv6 - определяют формат IP-адресов
			IPv4 - использует 32-битные адреса (192.168.1.1)
			IPv6 - использует 128-битные адреса (2001:0db8::1)
		2. IPsec - обеспечивает безопасность данных на сетевом уровне (шифрование и аутентификация)
		3. ICMP (Internet Control Message Protocol) - используется для диагностики сетей (команда ping)
		4. IGMP (Internet Group Management Protocol) - используется для работы с групповыми рассылками (multicast)
		5. RIP / OSPF - протоколы маршрутизации, позволяющие выбрать маршрутизатору оптимальный путь

MAC-адрес:
	MAC-адрес - уникальный идентификатор устройства, который вшит в его сетевую карту. нужен для доставки данных внутри одной локальной сети LAN
	работает на канальном уровне OSI - используется ТОЛЬКО для взаимодействия устройств в одной локальной сети (дом / офис)
	существует несколько стандартов MAC-адресов:
		Ethernet (IEEE 802.3)
		Bluetooth (IEEE 802.15)
		WLAN (IEEE 802.11)
	состоит из 48 битов - 12 шестнадцатеричных цифр, разделенных двоеточиями / дефисами: 00:1A:2B:3C:4D:5E
		первые 6 символов - OUI (Organizationally Unique Identifier) - указывают производителя устройства
		последние 6 символов - уникальный номер, присвоенный производителем
	типы MAC-адресов:
		Unicast - адрес, предназначенный для одного конкретного устройства. примечателен тем что последний бит первого октета = 0 (DE:AD:BE:EF:13:37)
		Multicast - адрес, который используется для отправки данных группе устройств. примечателен тем что последний бит первого октета = 1 (01:00:5E:EF:13:37)
		Broadcast - особый MAC-адрес, использующийся для широковещательных сообщений: сообщение отправляется всем устройствам в сети (FF:FF:FF:FF:FF:FF)
	процесс подключения MAC-адреса c помощью ARP:
		ARP (Address Resolution Protocol) - протокол для перевода из IP-адреса, в MAC-адрес
		сначала проверяется, находится ли устройство в той же подсети (по ip-адресу)
		1. если устройство знает IP-адрес, но не знает MAC-адрес, он отправляет запрос ARP
		2. все устройства слышат этот запрос, но получает его только тот, чей IP-адрес совпадает
		3. устройство, получившее ARP, отвечает своим MAC-адресом
	локальный диапазон MAC-адресов:
		назначаются админами сети или генерируется устройством. отличаются от глобальных MAC-адресов, назначающиеся производителями:
			глобальный MAC-адрес - первые 3 октета указывают производителя устройства (IEEE). предпоследний бит первого октета равен 0
			локальный MAC-адрес - предпоследний бит первого октета равен 1
	атаки на основе MAC-адресов:
		MAC-спуфинг - изменение MAC-адреса: используется для тестирования сетей / обхода ограничений (если доступ к сети запрещен по MAC-адресу) / выдачи себя за другое устройство
		MAC-флудинг - злоумышленник отправляет много пакетов с разными MAC-адресами для переполнения таблицы адресов коммутатора. 
			коммутатор начинает работать как хаб и все пакеты отправляются всем устройствам
		ARP-спуфинг - злоумышленник выдает себя за устройство с другим IP, и от его имени дает ARP-сообщение с целью изменить MAC-адрес на необходимый злоумышленнику.
			тем самым все данные будут передаваться злоумышленнику, а не тому кому предназначалось
	защита от ARP-атак:
		1. используйте статические ARP-записи: ручное привязывание IP-адресов к MAC-адресам
		2. включение порт-безопасность на коммутаторах
		3. использование шифрований (например, IPSec или SSL/TLS)
		4. установление системы обнаружения вторжений (IDS)

IP-адрес:
	IP-адрес - уникальный адрес устройства в сети. состоит из двух частей:
		1. сетевая часть - указывает принадлежность сети устройства
		2. хостовая часть - указывает конкретное устройство в этой сети
IPv4-адрес:
	32-битное число, разделенное на 4 октета (группы по 8 бит). каждый октет записывается в десятичной системе и разделяется точками
		бинарная запись					->	десятичная запись
		11000000.10101000.00001010.00100111	->	192.168.10.39
	каждый бит в октете имеет значение, пример первого октета 11000000:
		бит:		128	64	32	16	8	4	2	1
		значение:	1	1	0	0	0	0	0	0
		первый октет равен: 128+64=192
	маска подсети:
		показывает, какая часть IP-адреса относится к сети, а какая - к хосту
		пример: 255.255.255.0
			11111111.11111111.11111111.00000000 - первые 24 бита указывают на сеть, остальные на хост
	классы IP-адресов (в прошлом):
		IP-адреса делились на 5 классов (A, B, C, D, E) чтобы определить, какая часть адреса относится к сети, а какая к хосту
		класс		диапазон				маска подсети		CIDR		описание
		A		1.0.0.0–127.255.255.255	255.0.0.0			/8		Для больших сетей
		B		128.0.0.0–191.255.255.255	255.255.0.0		/16		Для средних сетей
		C		192.0.0.0–223.255.255.255	255.255.255.0		/24		Для маленьких сетей
		D		224.0.0.0–239.255.255.255	-				-		Для multicast
		E		240.0.0.0–255.255.255.255	-				-		Зарезервировано
	CIDR (Classless Inter-Domain Routing):
		заменил классы IP-адресов, вместо фиксированных масок он позволяет более гибко делить сети
		255.255.255.0 -> /24 - означает, что первые 24 бита используются для сети, оставшиеся 8 для хостов
	особые адреса:
		1. сетевой адрес - _._._.0/24 - первый адрес в одной сети
		2. широковещательный адрес - _._._.255/24 - последний адрес в одной сети, используется для отправки сообщения всем устройствам в сети
		3. шлюз по умолчанию - _._._.1~254 - адрес маршрутизатора, через который устройства выходят в сеть
	разделение на подсети (subnetting):
		процесс разделения большой сети на малые подсети для увеличения производительности сети / экономии IP-адресов / обеспечения безопасности (изоляция устройств)
		разделение на подсети:
			ip-адрес: 192.168.12.128/26, где: 26 бит указывают на сеть, оставшиеся 6 на хост:
			1. количество подсетей = 2^n, где n - количество дополнительных битов к маске подсети		# необходимо: 4 подсети = 2^2 -> n=2
			2. измененная маска подсети = 26 + 2 = 28
			3. размер подсети = 2^(32 - 28) = 16: каждая подсеть будет иметь по 16 адресов - 1 сетевой; 1 широковещательный; 14 доступных для хостов
			4. тем самым 1 подсеть будет выглядеть так:
				192.168.12.128 - сетевой адрес / 192.168.12.129 - 192.168.12.142 - доступные хосты / 192.168.12.143 - широковещательный адрес
				192.168.12.144 - начало второй подсети
		нахождение размера подсети:
			ip-адрес: 10.200.20.0/27
			1. находим количество бит для хостов = 32 - 27 = 5
			2. кол-во адресов в подсети = 2^(количество бит для хостов = 5) = 32
			3. тем самым сетевой адрес: 10.200.20.0; широковещательный адрес: 10.200.20.31; доступные хосты 10.200.20.1 - 10.200.20.30

таблица системы счислений:
	десятичные числа:		0	1	2	3	4	5	6	7	8	9	10	11	12	13	14	15
	двоичные числа:			0	1	10	11	100	101	110	111	1000	1001	1010	1011	1100	1101	1110	1111
	шестнадцатеричные числа:	0	1	2	3	4	5	6	7	8	9	A	B	C	D	E	F

IPv6-адрес:
	следующая версия протокола IP, пришедшая на смену IPv4	. отличается увеличенной длиной адреса - 128 вместо 32 бит
	состоит из 8 блоков по 16 бит. каждый блок записывается в шестнадцатеричной с.с. и отделяется двоеточием: fe80:0000:0000:0000:dd80:b1a9:6687:2d3b
		можно сократить форму - ведущие нули можно опустить; последовательные блоки можно заменить двойным двоеточием ОДИН РАЗ: fe80::dd80:b1a9:6687:2d3b
	перевод из IPv4 в IPv6:
		десятичное представление IPv4:		192.168.12.160
		шестнадцатеричное представление IPv6:	C0:A8:0C:A0
		192 / 16 = 12 -> первая октета равна C0; 168 / 12 = 10 -> вторая октета равна A + 8 (остаток) = A8...
	части IPv6-адреса:
		1. Network Prefix (префикс сети) - определяет сеть или подсеть. указывается через "/количество первых бит"
		2. Interface Identifier (идентификатор интерфейса) - уникально идентифицирует устройство внутри сети
		тем самым fe80:0000:0000:0000:dd80:b1a9:6687:2d3b/64 - fe80::/64 - префикс; dd80:b1a9:6687:2d3b - идентификатор интерфейса
	типы адресов - IPv6 поддерживает несколько типов адресов:
		Unicast - адресуется одному конкретному устройству (прим. fe80::1)
		Anycast - адресуется группе устройств, но пакет доставляется только одному из них: ближайшему (прим. используется для маршрутизации)
		Multicast - адресуется группе устройств, и все они получают пакет (прим. ff02::1 - все устройства в локальной сети)
	особенности IPv6-адреса:
		1. решает проблему нехватки ip-адресов
		2. автоконфигурация - устройства сами могут себе назначать ip-адреса (без DHCP)
		3. встроенность IPsec - шифрование и аутентификация являются обязательными
		4. ускорение маршрутизации - за счет простого формата заголовка пакетов
		5. поддержка больших пакетов - поддерживает пакеты размером до 4 гб

IP-пакет - основной блок данных, который передается по сети интернет или любой другой сети, работающей по протоколу IP
	содержит адрес отправителя, адрес получателя и данные
	состоит из двух частей:
		1. заголовок - содержит метаданные для маршрутизации и управления пакетом
			version - указывает версию протокола IP (чаще всего IPv4/IPv6)
			header length - размер заголовка в байтах
			ToS (type of service) - приоритет пакета, например для голосового или видео трафика
			total length - общий размер трафика, включая заголовок и данные
			identification - уникальный номер трафика, используемый для сборки разделенных данных
			flags - указывают, можно ли разбивать пакет на части
			fragment offset - место фрагмента в исходном пакете, если он был разбит
			TTL (time to live) - время жизни пакета
			protocol - указывает, какой протокол используется для данных внутри пакета (прим. TCP/UDP)
			header checksum - проверка целостности заголовка
			source ip address - адрес устройства, отправившего пакет
			destination ip address - адрес устройства, которому назначен пакет
		2. данные - та информация, которую нужно передать
			ограничен максимальным размером пакета (MTU - Maximum Transmission Unit), который обычно составляет 1500 байт

анализ сетевого трафика:
	IP ID Field - используется для идентификации фрагментов одного пакета
	Record-Route Field - записывает маршрут пакета к целевому устройству. заполняется IP-адресами всех устройств, через которые проходит пакет
	Traceroute - инструмент для определения маршрута до целевого устройства. 
		каждым разом пакет отправляется с увеличением TTL на одну единицу, пока не достигнет получателя

беспроводные сети:
	сети, которые используют радиочастоты для передачи данных между устройствами без физических соединений: Wi-Fi - локальные сети / 3G, 4G, 5G - широкие сети
	принцип работы беспроводных сетей:
		1. ключевым элементом в каждом устройстве является беспроводной адаптер, который преобразует данные в радиосигналы и отправляет через воздух
		2. центральным устройством является точка доступа (Wireless Access Point, WAP), которая: соединяет беспроводную сеть с проводной; управляет доступом устройств к сети
	протоколы беспроводных сетей:
		IEEE 802.11 - стандарт, определяющий технические детали работы беспроводных сетей
			включает подстандарты, такие как 802.11a , 802.11b , 802.11g , 802.11n , 802.11ac , 802.11ax (WiFi 6)
		другие протоколы:
			TCP/IP: Используется для маршрутизации трафика.
			DHCP: Автоматически назначает IP-адреса устройствам.
			WPA2/WPA3: Протоколы безопасности для защиты данных.
	процесс подключения к беспроводным сетям:
		1. устройство отправляет запрос на ассоциацию (association request) к точке доступа. содержит:
			MAC-адрес устройства.
			SSID (Service Set Identifier): Имя сети.
			Поддерживаемые скорости передачи данных, каналы и протоколы безопасности.
		2. точка доступа отвечает запросом на аутентификацию (authentication request)
		3. устройство проходит аутентификацию (например, через пароль)
		4. после успешной аутентификации устройство получает доступ к сети
		скрытые сети:
			если SSID скрыт (не транслируется), устройства должны знать имя сети заранее
			однако, SSID все равно можно найти в пакетах аутентификации

	безопасность беспроводных сетей:
		WEP (Wired Equivalent Privacy) - обеспечить базовый уровень безопасности для беспроводных сетей:
			алгоритм шифрования: RC4
			методы аутентификации:
				WEP-40/WEP-64: Использует 40-битный секретный ключ + 24-битный Initialization Vector (IV) .
				WEP-104: Использует 80-битный секретный ключ + 24-битный IV.
			Проблемы WEP:
				Малый размер IV (24 бита) - Из-за малого размера IV значения могут повторяться, что делает возможным анализ трафика и расшифровку данных.
				Использование общего ключа - Один и тот же ключ используется для шифрования и аутентификации, что упрощает атаки.
				Уязвимость к атакам - Атаки на основе перебора IV; Расшифровка пакетов через анализ CRC (Cyclic Redundancy Check).
			уязвимости протокола:
				Challenge-Response Handshake:
					1. устройство отправляет запрос на подключение
					2. точка доступа отправляет "вызов" (challenge string)
					3. устройство вычисляет ответ на основе общего секретного ключа
					4. точка доступа проверяет ответ и подтверждает аутентификацию
				CRC (Cyclic Redundancy Check):
					используется для проверки целостности данных
					однако CRC рассчитывается на основе незашифрованных данных, что позволяет злоумышленникам восстановить открытый текст даже из зашифрованного пакета
			последствия:
				WEP легко взламывается с помощью инструментов, таких как Aircrack-ng.
				Поэтому WEP больше не рекомендуется для использования.
		WPA (WiFi Protected Access) - заменить WEP и предоставить более надежную защиту:
			алгоритм шифрования: TKIP (Temporal Key Integrity Protocol) или AES (Advanced Encryption Standard)
			методы аутентификации:
				Pre-Shared Key (PSK): Используется пароль для доступа к сети.
				802.1X: Используется сервер аутентификации для корпоративных сетей
			преимущества WPA:
				Динамические ключи - Ключи изменяются для каждого сеанса, что затрудняет взлом.
				Защита от атак на CRC - Вместо CRC используется MIC (Message Integrity Code), который более устойчив к манипуляциям.
				Совместимость - Поддерживается большинством современных устройств.
		WPA2: улучшить безопасность WPA
			алгоритм шифрования: AES (CCMP — Counter Mode Cipher Block Chaining Message Authentication Code Protocol)
			преимущества:
				высокий уровень безопасности
				защита от известных атак			
		WPA3: предоставить ещё более высокий уровень безопасности
			алгоритм шифрования: AES (CCMP — Counter Mode Cipher Block Chaining Message Authentication Code Protocol)
			преимущества:
				SAE (Simultaneous Authentication of Equals) - защита от атак методом перебора
				Forward Secrecy - если ключ будет скомпрометирован, ранее зашифрованные данные останутся защищёнными
				улучшенная защита открытых сетей - использует индивидуальное шифрование для каждого устройства, даже в открытых сетях
		функции безопасности - сети используют несколько уровней защиты для предотвращения несанкционированного доступа и обеспечения конфиденциальности:
			шифрование - защита данных от перехвата
			контроль доступа - ограничение подключения только для авторизованных устройств
			файрвол - блокировка нежелательного трафика и защита от киберугроз
	
	протоколы аутентификации - формализованный набор правил и шагов, которые определяют, как именно взаимодействуют стороны (клиент и сервер) для выполнения аутентификации
		обеспечивают проверку подлинности пользователей, гарантируя, что только авторизованные лица могут получить доступ к ресурсам
		существуют следующие протоколы:
			LEAP (Lightweight Extensible Authentication Protocol) - упрощённая версия EAP, разработанная Cisco для аутентификации в беспроводных сетях
				метод аутентификации - общий ключ для шифрования и аутентификации
				проблемы: уязвим к атакам методом перебора (brute force); если ключ скомпрометирован, злоумышленник может легко получить доступ к сети
			PEAP (Protected Extensible Authentication Protocol) - более безопасный протокол аутентификации, который использует туннелирование TLS
				метод аутентификации:
					Создаёт защищённый туннель между устройством и точкой доступа (WAP)
					Использует цифровые сертификаты для проверки подлинности сервера
				преимущества:
					защищает процесс аутентификации от перехвата
					устойчив к атакам таким как MITM (Man-In-The-Middle)
			TACACS+ - это протокол для аутентификации и авторизации пользователей, часто используемый в корпоративных сетях
				принцип работы:
					1. точка доступа (WAP) отправляет запрос аутентификации на TACACS+ сервер
					2. запрос шифруется (например, с использованием SSL/TLS или IPSec), чтобы защитить данные пользователя
				преимущества:
					централизованное управление доступом
					высокий уровень безопасности благодаря шифрованию
	
	атаки на беспроводные сети - Disassociation Attack (атака на разрыв соединения):
		принцип работы:
			злоумышленник отправляет фреймы "disassociation" (разрыв соединения) клиенту
			клиент отключается от сети и должен повторно подключиться
		цель атаки:
			нарушение работы сети
			подготовка к другим атакам, например, MITM (Man-in-the-Middle).
		защита:
			мониторинг	сети для обнаружения подозрительной активности
			использование WPA3 или других современных протоколов
	
	методы защиты беспроводных сетей:
		отключение трансляции SSID - скрытие имени сети (SSID) делает её менее заметной для внешних устройств:
			принцип работы:
				точка доступа перестает транслировать SSID в beacon-фреймах
				только устройства, знающие имя сети, могут подключиться к сети
			ограничения:
				не защищает от перехвата SSID в пакетах аутентификации
				не является надежным методом защиты
		WPA (WiFi Protected Access) - современный стандарт шифрования для беспроводных сетей
			версии:
				WPA-Personal: Для домашних и малых сетей. Использует пароль (Pre-Shared Key, PSK).
				WPA-Enterprise: Для корпоративных сетей. Использует централизованный сервер аутентификации (например, RADIUS или TACACS+)
			преимущества:
				AES-шифрование обеспечивает высокий уровень безопасности.
				Защищает от перехвата данных и несанкционированного доступа.
		фильтрация MAC-адресов - разрешение подключения только устройств с определёнными MAC-адресами
			принцип работы:
				точка доступа перед каждым подключением проверяет MAC-адрес устройства
				если MAC-адрес не входит в список разрешенных, подключение блокируется
			ограничения:
				MAC-адреса можно подделать
				не является надежным методом защиты
		EAP-TLS (Extensible Authentication Protocol - Transport Layer Security) - протокол для безопасной аутентификации и шифрования
			принцип работы:
				использует цифровые сертификаты и PKI (Public Key Infrastructure) для проверки подлинности клиентов
				создаёт защищённый туннель для передачи данных

механизмы обмена ключами и протоколами:
	позволяют двум сторонам безопасно согласовать общий секретный ключ через незащищенный канал связи. этот ключ используется для шифрования-дешифрования данных
	основные характеристики:
		безопасность протоколов зависит от математических свойств (например, сложности факторизации чисел или вычислений на эллиптических кривых)
		продолжительность может варьироваться в зависимости от алгоритма
		защита от атак, таких как MITM (Man-In-The-Middle) требует дополнительных мер, например аутентификации
	основные алгоритмы обмена ключами:
		Diffie-Hellman (DH) - позволяет двум сторонам согласовать общий секретный ключ без предварительного обмена закрытой информацией
			основан на математических свойствах степеней больших чисел
			преимущества:
				простота реализации; широко используется в протоколах, таких как TLS
			ограничения:
				уязвим к атакам MITM, если нет аутентификации; требует вычислительной мощи
		Rivest–Shamir–Adleman (RSA) - использует свойства простых больших чисел для генерации ключей. широко применяется для шифрования, подписей и аутентификации
			преимущества:
				высокая безопасность; поддерживает цифровые подписи и аутентификацию
			ограничения:
				высокая вычислительная сложность; требует вычислительной мощи
		Elliptic Curve Diffie-Hellman (ECDH) - вариант DH, но использующий эллиптическую криптографию. повышенная безопасность и эффективность
			преимущества:
				более высокая производительность по сравнению с традиционным DH; поддерживает прямую секретность (forward secrecy)
			использование:
				протоколы TLS и IKE; аутентификация пользователей и устройств
		Elliptic Curve Digital Signature Algorithm (ECDSA) - алгоритм для создания цифровых подписей на основе эллиптической криптографии
			преимущества:
				более эффективен, чем традиционные алгоритмы подписей; обеспечивает высокую безопасность
			использование:
				аутентификация участников обмена ключами; подтверждение подлинности электронных документов
	протокол IKE (Internet Key Exchange):
		используется для подключения и поддержания защищенных коммуникационных сессий (например, VPN)
		использует комбинацию алгоритмов, таких как DH, RSA, AES для обмена ключами и согласования параметров безопасности
		режимы работы (2):
			Main Mode (основной):
				работает в три фазы, обеспечивая более высокую безопасность
				преимущества:
					защищает идентичность участников; гибкость в настройке параметров безопасности
			Aggressive Mode:
				работает в две фазы, обеспечивая быстроту обмена ключами (быстрее чем Main Mode)
				ограничения:
					не защищает идентичность участников; меньшая безопасность
	PSK (Pre-Shared Keys):
		секретное значение, разделяемое между участниками обмена ключами
		используется для аутентификации и установления общего секрета
		преимущества:
			добавляет дополнительный уровень безопасности; простота реализации
		недостатком служит то, что если значение PSK было скомпрометировано, безопасность сессии нарушается

атаки сети:
	Blind Spoofing - атакующий отправляет пакеты с поддельными данными (прим. ложным IP-адресом отправителя) и предполагает, как целевое устройство отреагирует на эти пакеты
		целью состоит обмануть целевое устройство, чтобы оно установило соединение с атакующим и выполняло другие действия

криптография - обеспечение конфиденциальности, целостности и аутентичности данных. защита данных от несанкционированного доступа
	существует два типа шифрования:
		симметричное шифрование - один ключ используется для шифрования и дешифрования
			преимущества:
				высокая производительность
				подходит для шифрования больших обьемов данных
			недостатки:
				если ключ скомпрометирован, данные находятся под уязвимостью
				проблемы с безопасным обменом ключами
			применение:
				шифрование файлов на жестком диске
				защита сетевого трафика (в протоколах SSL/TLS, IPsec, SSH)
		ассиметричное шифрование - для шифрования и дешифрования используются разные ключи
			публичный ключ - используется для шифрования данных
			приватный ключ - используется для дешифрования данных
			преимущества:
				безопасный обмен данных
				возможность аутентификации с помощью цифровых подписей
			недостатки:
				медленнее симметричного шифрования
				подходит для шифрования небольших обьемов данных
			применение:
				электронные подписи
				SSL/TLS, VPN, SSH
				облачные сервисы
	режимы шифрования:
		ECB (Electronic Code Book) - каждый блок шифруется независимо
			подвержен атакам через частотный анализ - не рекомендуется для использования
		CBC (Cipher Block Chaining) - каждый блок XOR-ится с предыдущим зашифрованным блоком
			скрывает паттерны данных - широко используется (прим. в AES)
		CFB (Cipher Feedback) - преобразует блочный шифр в потоковый
			подходит для реального времени - шифрует сетевой трафик
		OFB (Output Feedback) - генерирует поток ключей для XOR с данными
			подходит для потокового шифрования - SSH, PKCS
		CTR (Counter) - использует счетчик для генерации потока ключей
			высокая производительность - IPsec, Bitlocker
		GCM (Galois/Counter Mode) - обеспечивает как конфиденциальность, так и целостность данных
			поддержка аутентификации - беспроводные сети, VPN




































































