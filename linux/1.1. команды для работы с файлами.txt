основные директории:
	/		Корневая директория, содержащая все файлы, необходимые для загрузки системы.
	/bin		Содержит основные команды.
	/boot		Файлы загрузчика, ядра и другие файлы, необходимые для запуска системы.
	/dev		Файлы устройств для доступа к аппаратным компонентам.
	/etc		Конфигурационные файлы системы и приложений.
	/home		Директории пользователей.
	/lib		Библиотеки, необходимые для загрузки системы.
	/media		Точка монтирования внешних устройств, таких как USB-накопители.
	/mnt		Временная точка монтирования файловых систем.
	/opt		Дополнительные файлы, такие как сторонние инструменты.
	/root		Домашняя директория суперпользователя (root).
	/sbin		Утилиты для администрирования системы.
	/tmp		Временные файлы, которые удаляются при перезагрузке.
	/usr		Программы, библиотеки и документация.
	/var		Переменные данные, такие как логи, почтовые ящики и файлы веб-приложений.

символика в директории:
	.. - папка уровнем постарше
	. - нынешняя директория
	~ - домашняя директория (/home/имя_пользователя)

команды для получения информации о файлах:
	ls: используется для составления списка файлов и каталогов в текущей папке или любом указанном каталоге
		ключи команды (ls <_>) (команды сочетаются прим. ls -lai):
			-l: для отображения дополнительных данных обо всех файлах в текущей рабочей папке
				тип и разрешение; количество ссылок на файл; владелец файла; групповой владелец файла; размер файла; дата и время; название
			-a: для отображения скрытых файлов (. - текущая директория; .. - родительская директория)
			-h: для вывода человекочитаемого размера (в байтах, килобайтах...)
			-i: для отображения индекса файла
			-t: для сортировки по времени файла
			-S: для сортировки по размеру файла
			-X: для сортировки по разрешению файла
			-r: для обратной сортировки
	cd: для перехода в указанный каталог (прим. cd /dev/shm)
		cd -: для возврата в предыдущий каталог
		cd ..: для возврата в родительскую папку (прим: из /dev/shm -> /dev)
	stat <filename>: для получения подробной информации о файле
	tree: позволяет просмотреть всё содержание в виде дерева
	lsblk: для отображения информации о накопителях (жесткий диск / USB / разделы)
	lsusb: для отображения информации о флеш-накопителях
	lsof: для отображения списка открытых файлов и процессов в данный момент
		как файл рассматривается: обычные файлы, директории, библиотеки, сокеты, устройства
	pwd: для вывода полного пути к текущей рабочей папке

команды для создания/перемещения/переименовывания файлов:
	touch <name>: для создания текстового файла
	mkdir <name>: для создания папки
		-p: позволяет создать несколько папок сразу внутри других папок (прим. mkdir -p /main/main2/main3 - будут созданы корневые папки внутри созданной папки)
	mv: переименовать/переместить файл
		mv <file/directory> <renamed file/directory>: синтаксис для переименовывания файла
		mv <way/filename> <way/filename2> <way>: синтаксис для перемещений файлов
	cv: для копирования файла
		cv <way/filename> <way/filename2> <way>: синтаксис копирования файлов
	rm <filename1> <filename2>: для удаления файла
		-r: рекурсивное удаление (для удаления каталогов и их содержимого)
		-f: принудительное удаление (без подтверждения)
		-i: подтверждение перед удалением каждого файла
		-v: для показа того что удаляется

редакторы для редактирования файлов:
	Nano - простой редактор, с понятным интерфейсом для быстрого редактирования
		nano <way/filename>: позволяет открыть/создать файл
	cat - позволяет прочесть содержимое файла прямо в терминале
		cat <way/filename>: позволяет открыть содержимое
	Vim - мощный редактор, который в сочетании множества инструментов делают его максимально гибким
		vim <way/filename>: создает/открывает файл в обычном режиме
		основные режимы работы:
			1. обычный режим - по умолчанию. можно передвигаться по тексту, удалять символы, копировать, вставлять и выполнять другие команды
			2. режим ввода - позволяет удобно редактировать текст. горячие клавиши:
				i - вставить текст перед курсором
				a - вставить текст после курсора
				o - создать новую строку под курсором и начать ввод
			3. режим командной строки - для сохранения файла, выхода из редактора, поиска

команды и команды-фильтры (|) для фильтрации вывода:
	| more: позволяет частями открыть содержимое файла / входных данных для большего удобства (выход клавишей Q)
		примерный синтаксис: cat /etc/passwd | more
	less: позволяет частями в отдельном от всего окне открыть содержимое файла, при закрытии (клавишей Q) все стирается
		примерный синтаксис: less /etc/passwd
	head: позволяет прочесть первые 10 строк файла
		примерный синтаксис: head /etc/passwd
	tail: позволяет прочесть последние 10 строк файла
		примерный синтаксис: tail /etc/passwd
	| sort <options>: для сортировки значений по алфавитному порядку
		примерный синтаксис: cat /etc/passwd | sort
		опции:
			-u: позволяет удалить дубликаты в полученном значении
	| grep <option> <word>: позволяет отфильтровать значения команды фигурированием слова <word>
		примерный синтаксис: cat /etc/passwd | grep -v 'nologin\|false'
		синтаксис \| позволяет указать несколько слов сразу
		умеет открывать файлы без помощи текстового редактора, синтаксис: grep <option> <word> <filename>
		опции:
			grep: для отбора значений, содержащих <word>
			-v: для отбора значений, не содержащих <word>
			-E: позволяет использовать регулярные выражения
	| cut <options>: для вырезки только нужных значений из строки. разделяет строку на части
		примерный синтаксис: cat /etc/passwd | cut -d":" -f1,3
		опции:
			-d'_': для указания разделителя
			-f1,3: для вывода части с указанной цифрой
	| tr <parameter1> <parameter2>: для замены определенных символов на заданные (работает только с символами)
		примерный синтаксис: cat /etc/passwd | tr ":" " "
	| column <option>: для отображения в табличном виде значений. разделителем по умолчанию является пробел
		примерный синтаксис: cat /etc/passwd | column -t
		опции:
			-t: для создания таблицы с выравниванием столбцов
			-s'_': для изменения разделителя (вместо обычного пробела)
			-o"|": символ для разделителя столбцов
			-с <number>: для ограничения ширины вывода. если ширина превышена, данные переносятся на новую строку
			-n: для отключения обьединения пустых столбцов
			-x: изменяет поведение колонн - построчный вывод вместо табличного
	| awk '{print <pos1>, <pos2>}': для отображения только определенных стобцов значения (разделитель - пробел)
		примерный синтаксис: cat /etc/passwd | awk "{print $1, $NF}"
		позиции:
			$1 - первое значение столбца
			SNF - последнее значение столбца
	| sed <s/word1/word2/g>: для замены слов в строке
		примерный синтаксис: cat /etc/passwd | sed <s/bin/HTB/g>
	| uniq: выведет только уникальные значения

команда для подсчета количества строк, слов, байтов:
	wc <options> <file>: если файл не указан, читает данные из стандартного ввода (и вывода, если значения были переадресованы |)
	результат в виде: строки слова байты имя_файла
	опции:
		-l: подсчитывает количество строк в файле
		-w: подсчитывает количество слов в файле
		-с: подсчитывает количество байтов в файле
		-m: подсчитывает количество символов в файле (включая пробелы и переводы строк)

команды для поиска файлов и папок (каталогов):
	which <filename>: возвращает путь к файлу или ссылке, которые необходимо выполнить
	find <location> <options>: позволяет найти файлы и папки, а также отсортировать найденные значения
		примеры <options>:
			-type f: определяет тип искомого обьекта. f означает file (d = directory)
			-name *.conf: указывает имя файла который ищем. в данном случае * означает все файлы с расширением conf
			-user root: фильтрует все файлы, владельцем которых является root
			-size +20k: фильтрует по размеру - только файлы размером больше 20кБ
			-newermt 2020-03-03: фильтрует по дате файла - только файлы после 03.03.2020
			-exec ls -la \;: позволяет задействовать команду ls вместе с find, \; обьявляет что на этом действие команды ls завершено
			-2>/dev/null: гарантирует, что не будет значений с ошибками
	locate <filename>: предлагает более быстрый поиск по системе. работает за счет локальной базы данных db, содержащий все данные о файлах
		для более точного поиска, следует обновить локальную базу данных командой sudo updatedb
		минус: предлагает не так много фильтров в отличии от find

знаки перенаправления значений >, >> и <:
	работают: с командами, поддерживающими стандартные потоки ввода и вывода; при наличии прав доступа; с текстовыми данными
	command > filename: перенаправляет вывод команды в указанный файл, перезаписывая его содержимое. если файла нет - будет создан
		2>/dev/null: позволяет перенаправлять ошибочные значения (код STDERR-2) в никуда
	command >> filename: перенаправляет вывод команды в указанный файл, добавляя содержимое в конец файла
	command < filename: перенаправляет содержимое файла на вход команды

регулярные выражения (используются в командах grep, sed, awk):
	последовательность знаков и символов, которые в совокупности образуют шаблон поиска
	операторы группировки:
		(a) - круглые скобки используются для группировки частей регулярного выражения. внутри скобок можно определить дополнительные шаблоны, которые должны обрабатываться вместе
		[a-z] - квадратные скобки используются для определения классов символов. внутри скобок указывается список символов для поиска
		{1, 10} - фигурные скобки используются для определения квантификаторов. внутри указывается число или диапазон, значащий сколько раз должен применяться предыдущий шаблон
		| - означает оператор ИЛИ ("notlogin|false")
		.* - означает оператор И ("notlogin.*false")
	синтаксис: grep -E "nologin|false" /etc/passwd
